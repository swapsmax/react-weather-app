{"ast":null,"code":"var _jsxFileName = \"/Users/swapnil/weather-app-swapnil/src/components/Particle.jsx\",\n  _s = $RefreshSig$();\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport React, { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Particle() {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    loaded: particlesLoaded,\n    options: {\n      particles: {\n        color: {\n          value: \"#FF0000\",\n          animation: {\n            enable: true,\n            speed: 10\n          }\n        },\n        move: {\n          attract: {\n            enable: false,\n            distance: 100,\n            rotate: {\n              x: 2000,\n              y: 2000\n            }\n          },\n          direction: \"none\",\n          enable: true,\n          outModes: {\n            default: \"destroy\"\n          },\n          path: {\n            clamp: false,\n            enable: true,\n            delay: {\n              value: 0\n            },\n            generator: \"polygonPathGenerator\",\n            options: {\n              sides: 6,\n              turnSteps: 30,\n              angle: 30\n            }\n          },\n          random: false,\n          speed: 3,\n          straight: false,\n          trail: {\n            fillColor: \"#000\",\n            length: 20,\n            enable: true\n          }\n        },\n        number: {\n          density: {\n            enable: true,\n            area: 800\n          },\n          value: 0\n        },\n        opacity: {\n          value: 1\n        },\n        shape: {\n          type: \"circle\"\n        },\n        size: {\n          value: 2\n        }\n      },\n      background: {\n        color: \"#000\"\n      },\n      fullScreen: {\n        zIndex: -1\n      },\n      emitters: {\n        direction: \"none\",\n        rate: {\n          quantity: 1,\n          delay: 0.25\n        },\n        size: {\n          width: 0,\n          height: 0\n        },\n        position: {\n          x: 50,\n          y: 50\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n}\n_s(Particle, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = Particle;\nexport default Particle;\nvar _c;\n$RefreshReg$(_c, \"Particle\");","map":{"version":3,"names":["Particles","loadFull","React","useCallback","jsxDEV","_jsxDEV","Particle","_s","particlesInit","engine","console","log","particlesLoaded","container","id","init","loaded","options","particles","color","value","animation","enable","speed","move","attract","distance","rotate","x","y","direction","outModes","default","path","clamp","delay","generator","sides","turnSteps","angle","random","straight","trail","fillColor","length","number","density","area","opacity","shape","type","size","background","fullScreen","zIndex","emitters","rate","quantity","width","height","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/swapnil/weather-app-swapnil/src/components/Particle.jsx"],"sourcesContent":["import Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport React, { useCallback } from 'react';\n\nfunction Particle(){\n\n\tconst particlesInit = useCallback(async engine => {\n        console.log(engine);\n        // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n        // starting from v2 you can add only the features you need reducing the bundle size\n        await loadFull(engine);\n    }, []);\n\n    const particlesLoaded = useCallback(async container => {\n        await console.log(container);\n    }, []);\n\n\n\n\treturn(\n\n\t\t<Particles\n\n\t\tid=\"tsparticles\"\n            init={particlesInit}\n            loaded={particlesLoaded}\n            options={{\n\n            \tparticles: {\n      color: {\n        value: \"#FF0000\",\n        animation: {\n          enable: true,\n          speed: 10\n        }\n      },\n      move: {\n        attract: {\n          enable: false,\n          distance: 100,\n          rotate: {\n            x: 2000,\n            y: 2000\n          }\n        },\n        direction: \"none\",\n        enable: true,\n        outModes: {\n          default: \"destroy\"\n        },\n        path: {\n          clamp: false,\n          enable: true,\n          delay: {\n            value: 0\n          },\n          generator: \"polygonPathGenerator\",\n          options: {\n            sides: 6,\n            turnSteps: 30,\n            angle: 30\n          }\n        },\n        random: false,\n        speed: 3,\n        straight: false,\n        trail: {\n          fillColor: \"#000\",\n          length: 20,\n          enable: true\n        }\n      },\n      number: {\n        density: {\n          enable: true,\n          area: 800\n        },\n        value: 0\n      },\n      opacity: {\n        value: 1\n      },\n      shape: {\n        type: \"circle\"\n      },\n      size: {\n        value: 2\n      }\n    },\n    background: {\n      color: \"#000\"\n    },\n    fullScreen: {\n      zIndex: -1\n    },\n    emitters: {\n      direction: \"none\",\n      rate: {\n        quantity: 1,\n        delay: 0.25\n      },\n      size: {\n        width: 0,\n        height: 0\n      },\n      position: {\n        x: 50,\n        y: 50\n      }\n    }\n\n           \t}}\n\n\t\t/>\n\n\t)\n}\n\nexport default Particle"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}