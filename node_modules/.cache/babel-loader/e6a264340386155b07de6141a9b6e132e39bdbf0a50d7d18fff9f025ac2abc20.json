{"ast":null,"code":"var _jsxFileName = \"/Users/swapnil/weather-app-swapnil/src/components/Particle.jsx\",\n  _s = $RefreshSig$();\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport React, { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Particle() {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    loaded: particlesLoaded,\n    options: {\n      fpsLimit: 60,\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"push\"\n          },\n          onHover: {\n            enable: true,\n            mode: \"repulse\",\n            parallax: {\n              enable: false,\n              force: 60,\n              smooth: 10\n            }\n          },\n          resize: true\n        },\n        modes: {\n          push: {\n            quantity: 4\n          },\n          repulse: {\n            distance: 200,\n            duration: 0.4\n          }\n        }\n      },\n      particles: {\n        color: {\n          value: \"#ffffff\"\n        },\n        move: {\n          direction: \"none\",\n          enable: true,\n          outModes: \"out\",\n          random: false,\n          speed: 2,\n          straight: false\n        },\n        number: {\n          density: {\n            enable: true,\n            area: 800\n          },\n          value: 80\n        },\n        opacity: {\n          animation: {\n            enable: true,\n            speed: 0.05,\n            sync: true,\n            startValue: \"max\",\n            count: 1,\n            destroy: \"min\"\n          },\n          value: {\n            min: 0,\n            max: 0.5\n          }\n        },\n        shape: {\n          type: \"star\"\n        },\n        size: {\n          value: {\n            min: 1,\n            max: 5\n          }\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n}\n_s(Particle, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = Particle;\nexport default Particle;\nvar _c;\n$RefreshReg$(_c, \"Particle\");","map":{"version":3,"names":["Particles","loadFull","React","useCallback","jsxDEV","_jsxDEV","Particle","_s","particlesInit","engine","console","log","particlesLoaded","container","id","init","loaded","options","fpsLimit","interactivity","events","onClick","enable","mode","onHover","parallax","force","smooth","resize","modes","push","quantity","repulse","distance","duration","particles","color","value","move","direction","outModes","random","speed","straight","number","density","area","opacity","animation","sync","startValue","count","destroy","min","max","shape","type","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/swapnil/weather-app-swapnil/src/components/Particle.jsx"],"sourcesContent":["import Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport React, { useCallback } from 'react';\n\nfunction Particle(){\n\n\tconst particlesInit = useCallback(async engine => {\n        console.log(engine);\n        // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n        // starting from v2 you can add only the features you need reducing the bundle size\n        await loadFull(engine);\n    }, []);\n\n    const particlesLoaded = useCallback(async container => {\n        await console.log(container);\n    }, []);\n\n\n\n\treturn(\n\n\t\t<Particles\n\n\t\tid=\"tsparticles\"\n            init={particlesInit}\n            loaded={particlesLoaded}\n            options={{\n\n            \tfpsLimit: 60,\n  \n\t\t\t  interactivity: {\n\t\t\t    events: {\n\t\t\t      onClick: { enable: true, mode: \"push\" },\n\t\t\t      onHover: {\n\t\t\t        enable: true,\n\t\t\t        mode: \"repulse\",\n\t\t\t        parallax: { enable: false, force: 60, smooth: 10 }\n\t\t\t      },\n\t\t\t      resize: true\n\t\t\t    },\n\t\t\t    modes: {\n\t\t\t      push: { quantity: 4 },\n\t\t\t      repulse: { distance: 200, duration: 0.4 }\n\t\t\t    }\n\t\t\t  },\n\t\t\t  particles: {\n\t\t\t    color: { value: \"#ffffff\" },\n\t\t\t    move: {\n\t\t\t      direction: \"none\",\n\t\t\t      enable: true,\n\t\t\t      outModes: \"out\",\n\t\t\t      random: false,\n\t\t\t      speed: 2,\n\t\t\t      straight: false\n\t\t\t    },\n\t\t\t    number: {\n\t\t\t      density: {\n\t\t\t        enable: true,\n\t\t\t        area: 800\n\t\t\t      },\n\t\t\t      value: 80\n\t\t\t    },\n\t\t\t    opacity: {\n\t\t\t      animation: {\n\t\t\t        enable: true,\n\t\t\t        speed: 0.05,\n\t\t\t        sync: true,\n\t\t\t        startValue: \"max\",\n\t\t\t        count: 1,\n\t\t\t        destroy: \"min\"\n\t\t\t      },\n\t\t\t      value: {\n\t\t\t        min: 0,\n\t\t\t        max: 0.5\n\t\t\t      }\n\t\t\t    },\n\t\t\t    shape: {\n\t\t\t      type: \"star\"\n\t\t\t    },\n\t\t\t    size: {\n\t\t\t      value: { min: 1, max: 5 }\n\t\t\t    }\n  }\n\n           \t}}\n\n\t\t/>\n\n\t)\n}\n\nexport default Particle"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,mBAAmB;AACzC,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAElB,MAAMC,aAAa,GAAGL,WAAW,CAAC,MAAMM,MAAM,IAAI;IAC3CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB;IACA;IACA;IACA,MAAMR,QAAQ,CAACQ,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAGT,WAAW,CAAC,MAAMU,SAAS,IAAI;IACnD,MAAMH,OAAO,CAACC,GAAG,CAACE,SAAS,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAIT,oBAECR,OAAA,CAACL,SAAS;IAEVc,EAAE,EAAC,aAAa;IACNC,IAAI,EAAEP,aAAc;IACpBQ,MAAM,EAAEJ,eAAgB;IACxBK,OAAO,EAAE;MAERC,QAAQ,EAAE,EAAE;MAEpBC,aAAa,EAAE;QACbC,MAAM,EAAE;UACNC,OAAO,EAAE;YAAEC,MAAM,EAAE,IAAI;YAAEC,IAAI,EAAE;UAAO,CAAC;UACvCC,OAAO,EAAE;YACPF,MAAM,EAAE,IAAI;YACZC,IAAI,EAAE,SAAS;YACfE,QAAQ,EAAE;cAAEH,MAAM,EAAE,KAAK;cAAEI,KAAK,EAAE,EAAE;cAAEC,MAAM,EAAE;YAAG;UACnD,CAAC;UACDC,MAAM,EAAE;QACV,CAAC;QACDC,KAAK,EAAE;UACLC,IAAI,EAAE;YAAEC,QAAQ,EAAE;UAAE,CAAC;UACrBC,OAAO,EAAE;YAAEC,QAAQ,EAAE,GAAG;YAAEC,QAAQ,EAAE;UAAI;QAC1C;MACF,CAAC;MACDC,SAAS,EAAE;QACTC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAU,CAAC;QAC3BC,IAAI,EAAE;UACJC,SAAS,EAAE,MAAM;UACjBjB,MAAM,EAAE,IAAI;UACZkB,QAAQ,EAAE,KAAK;UACfC,MAAM,EAAE,KAAK;UACbC,KAAK,EAAE,CAAC;UACRC,QAAQ,EAAE;QACZ,CAAC;QACDC,MAAM,EAAE;UACNC,OAAO,EAAE;YACPvB,MAAM,EAAE,IAAI;YACZwB,IAAI,EAAE;UACR,CAAC;UACDT,KAAK,EAAE;QACT,CAAC;QACDU,OAAO,EAAE;UACPC,SAAS,EAAE;YACT1B,MAAM,EAAE,IAAI;YACZoB,KAAK,EAAE,IAAI;YACXO,IAAI,EAAE,IAAI;YACVC,UAAU,EAAE,KAAK;YACjBC,KAAK,EAAE,CAAC;YACRC,OAAO,EAAE;UACX,CAAC;UACDf,KAAK,EAAE;YACLgB,GAAG,EAAE,CAAC;YACNC,GAAG,EAAE;UACP;QACF,CAAC;QACDC,KAAK,EAAE;UACLC,IAAI,EAAE;QACR,CAAC;QACDC,IAAI,EAAE;UACJpB,KAAK,EAAE;YAAEgB,GAAG,EAAE,CAAC;YAAEC,GAAG,EAAE;UAAE;QAC1B;MACL;IAEU;EAAE;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEV;AAGJ;AAACtD,EAAA,CAtFQD,QAAQ;AAAAwD,EAAA,GAARxD,QAAQ;AAwFjB,eAAeA,QAAQ;AAAA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}