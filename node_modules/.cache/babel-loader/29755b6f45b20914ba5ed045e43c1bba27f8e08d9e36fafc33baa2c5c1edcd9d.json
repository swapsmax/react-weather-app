{"ast":null,"code":"'use strict';\n\nvar https = require('https');\nvar API_KEY = '';\nvar headers = {\n  'user-agent': 'ipapi/ipapi-nodejs/0.3'\n};\nvar fieldList = ['ip', 'city', 'region', 'country', 'postal', 'latitude', 'longitude', 'timezone', 'latlong'];\nvar _request = function (path, callback, isJson) {\n  var options = {\n    host: 'ipapi.co',\n    path: path,\n    headers: headers\n  };\n  var req = https.get(options, function (resp) {\n    var body = '';\n    resp.on('data', function (data) {\n      body += data;\n    });\n    resp.on('end', function () {\n      if (isJson) {\n        var loc = JSON.parse(body);\n        callback(loc);\n      } else {\n        var loc = body;\n        callback(loc);\n      }\n    });\n  });\n  req.on('error', function (e) {\n    callback(new Error(e));\n  });\n};\nvar location = function (callback, ip, key, field) {\n  var path;\n  var isField = false;\n  if (typeof callback !== 'function') {\n    return 'Callback function is required';\n  }\n  if (typeof field !== 'undefined' && field !== '') {\n    if (fieldList.indexOf(field) === -1) {\n      return 'Invalid field';\n    } else {\n      isField = true;\n    }\n  }\n  if (isField) {\n    if (typeof ip !== 'undefined') {\n      path = '/' + ip + '/' + field + '/';\n    } else {\n      path = '/' + field + '/';\n    }\n  } else {\n    if (typeof ip !== 'undefined') {\n      path = '/' + ip + '/json/';\n    } else {\n      path = '/json/';\n    }\n  }\n  if (typeof key !== 'undefined' && key !== '') {\n    path = path + '?key=' + key;\n  } else {\n    if (API_KEY !== '') {\n      path = path + '?key=' + API_KEY;\n    }\n  }\n  _request(path, callback, !isField);\n};\n\n/**\n * Query location for an IP address\n */\nmodule.exports = {\n  location: location\n};","map":{"version":3,"names":["https","require","API_KEY","headers","fieldList","_request","path","callback","isJson","options","host","req","get","resp","body","on","data","loc","JSON","parse","e","Error","location","ip","key","field","isField","indexOf","module","exports"],"sources":["/Users/swapnil/weather-app-swapnil/node_modules/ipapi.co/ipapi.js"],"sourcesContent":["\n'use strict';\n\nvar https = require('https');\n\nvar API_KEY = '';\n\nvar headers   = {'user-agent': 'ipapi/ipapi-nodejs/0.3'};\n\nvar fieldList = ['ip', 'city', 'region', 'country', 'postal', \n                  'latitude', 'longitude', 'timezone', 'latlong'];\n\n\nvar _request = function(path, callback, isJson){\n    var options = {\n        host: 'ipapi.co',\n        path: path,\n        headers: headers\n    };\n\n    var req = https.get(options, function(resp){\n        var body = ''\n\n        resp.on('data', function(data){\n            body += data;\n        });\n\n        resp.on('end', function(){\n            if (isJson) {\n                var loc = JSON.parse(body);            \n                callback(loc);\n            } else {\n                var loc = body;\n                callback(loc);\n            }\n        });\n    });\n\n    req.on('error', function(e) {\n        callback(new Error(e));\n    });\n};\n\n\nvar location = function(callback, ip, key, field){\n    var path;\n    var isField = false;\n\n    if (typeof callback !== 'function') {\n        return 'Callback function is required';\n    }\n\n    if ((typeof field !== 'undefined') && (field !== '')) {\n        if (fieldList.indexOf(field) === -1) {\n            return 'Invalid field'\n        } else {\n            isField = true;\n        }\n    }\n\n    if (isField) {\n        if (typeof ip !== 'undefined') {\n            path = '/' + ip + '/' + field + '/';\n        } else {\n            path = '/' + field + '/';\n        }\n    } else {\n        if (typeof ip !== 'undefined') {\n            path = '/' + ip + '/json/';\n        } else {\n            path = '/json/';\n        }        \n    }\n\n    if ((typeof key !== 'undefined') && (key !== '')){\n        path = path + '?key=' + key;\n    } else {\n        if (API_KEY !== ''){\n            path = path + '?key=' + API_KEY;\n        } \n    }\n\n    _request(path, callback, (!isField))\n};\n\n\n/**\n * Query location for an IP address\n */\nmodule.exports = {\n    location : location,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}